"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class UserEntity {
    constructor({ id, firstName, lastName, verified, email, userType, createdOn, updatedOn, }) {
        this.id = id;
        this.firstName = firstName;
        this.lastName = lastName;
        this.verified = verified;
        this.email = email;
        this.userType = userType;
        this.updatedOn = updatedOn ?? "";
        this.createdOn = createdOn;
    }
    key() {
        return {
            PK: `USER#${this.email}`,
            SK: `USER#${this.email}`,
        };
    }
    toItem() {
        return {
            ...this.key(),
            id: this.id,
            ENTITY: "USER",
            firstName: this.firstName,
            lastName: this.lastName,
            verified: this.verified,
            email: this.email,
            userType: this.userType,
            updatedOn: this.updatedOn,
            createdOn: this.createdOn,
        };
    }
    graphQlReturn() {
        return {
            id: this.id,
            ENTITY: "USER",
            firstName: this.firstName,
            lastName: this.lastName,
            verified: this.verified,
            email: this.email,
            userType: this.userType,
            updatedOn: this.updatedOn,
            createdOn: this.createdOn,
        };
    }
}
exports.default = UserEntity;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlckVudGl0eS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInVzZXJFbnRpdHkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFVQSxNQUFNLFVBQVU7SUFVZCxZQUFZLEVBQ1YsRUFBRSxFQUNGLFNBQVMsRUFDVCxRQUFRLEVBQ1IsUUFBUSxFQUNSLEtBQUssRUFDTCxRQUFRLEVBQ1IsU0FBUyxFQUNULFNBQVMsR0FDTTtRQUNmLElBQUksQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDO1FBQ2IsSUFBSSxDQUFDLFNBQVMsR0FBRyxTQUFTLENBQUM7UUFDM0IsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7UUFDekIsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7UUFDekIsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7UUFDbkIsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7UUFDekIsSUFBSSxDQUFDLFNBQVMsR0FBRyxTQUFTLElBQUksRUFBRSxDQUFDO1FBRWpDLElBQUksQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDO0lBQzdCLENBQUM7SUFFRCxHQUFHO1FBSUQsT0FBTztZQUNMLEVBQUUsRUFBRSxRQUFRLElBQUksQ0FBQyxLQUFLLEVBQUU7WUFDeEIsRUFBRSxFQUFFLFFBQVEsSUFBSSxDQUFDLEtBQUssRUFBRTtTQUN6QixDQUFDO0lBQ0osQ0FBQztJQUVELE1BQU07UUFDSixPQUFPO1lBQ0wsR0FBRyxJQUFJLENBQUMsR0FBRyxFQUFFO1lBQ2IsRUFBRSxFQUFFLElBQUksQ0FBQyxFQUFFO1lBQ1gsTUFBTSxFQUFFLE1BQU07WUFDZCxTQUFTLEVBQUUsSUFBSSxDQUFDLFNBQVM7WUFDekIsUUFBUSxFQUFFLElBQUksQ0FBQyxRQUFRO1lBQ3ZCLFFBQVEsRUFBRSxJQUFJLENBQUMsUUFBUTtZQUN2QixLQUFLLEVBQUUsSUFBSSxDQUFDLEtBQUs7WUFDakIsUUFBUSxFQUFFLElBQUksQ0FBQyxRQUFRO1lBQ3ZCLFNBQVMsRUFBRSxJQUFJLENBQUMsU0FBUztZQUN6QixTQUFTLEVBQUUsSUFBSSxDQUFDLFNBQVM7U0FDMUIsQ0FBQztJQUNKLENBQUM7SUFFRCxhQUFhO1FBQ1gsT0FBTztZQUNMLEVBQUUsRUFBRSxJQUFJLENBQUMsRUFBRTtZQUNYLE1BQU0sRUFBRSxNQUFNO1lBQ2QsU0FBUyxFQUFFLElBQUksQ0FBQyxTQUFTO1lBQ3pCLFFBQVEsRUFBRSxJQUFJLENBQUMsUUFBUTtZQUN2QixRQUFRLEVBQUUsSUFBSSxDQUFDLFFBQVE7WUFDdkIsS0FBSyxFQUFFLElBQUksQ0FBQyxLQUFLO1lBQ2pCLFFBQVEsRUFBRSxJQUFJLENBQUMsUUFBUTtZQUN2QixTQUFTLEVBQUUsSUFBSSxDQUFDLFNBQVM7WUFDekIsU0FBUyxFQUFFLElBQUksQ0FBQyxTQUFTO1NBQzFCLENBQUM7SUFDSixDQUFDO0NBQ0Y7QUFFRCxrQkFBZSxVQUFVLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbnRlcmZhY2UgVXNlclBhcmFtZXRlcnMge1xuICBpZDogc3RyaW5nO1xuICBmaXJzdE5hbWU6IHN0cmluZztcbiAgbGFzdE5hbWU6IHN0cmluZztcbiAgdmVyaWZpZWQ6IGJvb2xlYW47XG4gIGVtYWlsOiBzdHJpbmc7XG4gIHVzZXJUeXBlOiBzdHJpbmc7XG4gIGNyZWF0ZWRPbjogc3RyaW5nO1xuICB1cGRhdGVkT24/OiBzdHJpbmc7XG59XG5jbGFzcyBVc2VyRW50aXR5IHtcbiAgaWQ6IHN0cmluZztcbiAgZmlyc3ROYW1lOiBzdHJpbmc7XG4gIGxhc3ROYW1lOiBzdHJpbmc7XG4gIHZlcmlmaWVkOiBib29sZWFuO1xuICBlbWFpbDogc3RyaW5nO1xuICB1c2VyVHlwZTogc3RyaW5nO1xuICBjcmVhdGVkT246IHN0cmluZztcbiAgdXBkYXRlZE9uOiBzdHJpbmc7XG5cbiAgY29uc3RydWN0b3Ioe1xuICAgIGlkLFxuICAgIGZpcnN0TmFtZSxcbiAgICBsYXN0TmFtZSxcbiAgICB2ZXJpZmllZCxcbiAgICBlbWFpbCxcbiAgICB1c2VyVHlwZSxcbiAgICBjcmVhdGVkT24sXG4gICAgdXBkYXRlZE9uLFxuICB9OiBVc2VyUGFyYW1ldGVycykge1xuICAgIHRoaXMuaWQgPSBpZDtcbiAgICB0aGlzLmZpcnN0TmFtZSA9IGZpcnN0TmFtZTtcbiAgICB0aGlzLmxhc3ROYW1lID0gbGFzdE5hbWU7XG4gICAgdGhpcy52ZXJpZmllZCA9IHZlcmlmaWVkO1xuICAgIHRoaXMuZW1haWwgPSBlbWFpbDtcbiAgICB0aGlzLnVzZXJUeXBlID0gdXNlclR5cGU7XG4gICAgdGhpcy51cGRhdGVkT24gPSB1cGRhdGVkT24gPz8gXCJcIjtcblxuICAgIHRoaXMuY3JlYXRlZE9uID0gY3JlYXRlZE9uO1xuICB9XG5cbiAga2V5KCk6IHtcbiAgICBQSzogc3RyaW5nO1xuICAgIFNLOiBzdHJpbmc7XG4gIH0ge1xuICAgIHJldHVybiB7XG4gICAgICBQSzogYFVTRVIjJHt0aGlzLmVtYWlsfWAsXG4gICAgICBTSzogYFVTRVIjJHt0aGlzLmVtYWlsfWAsXG4gICAgfTtcbiAgfVxuXG4gIHRvSXRlbSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgLi4udGhpcy5rZXkoKSxcbiAgICAgIGlkOiB0aGlzLmlkLFxuICAgICAgRU5USVRZOiBcIlVTRVJcIixcbiAgICAgIGZpcnN0TmFtZTogdGhpcy5maXJzdE5hbWUsXG4gICAgICBsYXN0TmFtZTogdGhpcy5sYXN0TmFtZSxcbiAgICAgIHZlcmlmaWVkOiB0aGlzLnZlcmlmaWVkLFxuICAgICAgZW1haWw6IHRoaXMuZW1haWwsXG4gICAgICB1c2VyVHlwZTogdGhpcy51c2VyVHlwZSxcbiAgICAgIHVwZGF0ZWRPbjogdGhpcy51cGRhdGVkT24sXG4gICAgICBjcmVhdGVkT246IHRoaXMuY3JlYXRlZE9uLFxuICAgIH07XG4gIH1cblxuICBncmFwaFFsUmV0dXJuKCkge1xuICAgIHJldHVybiB7XG4gICAgICBpZDogdGhpcy5pZCxcbiAgICAgIEVOVElUWTogXCJVU0VSXCIsXG4gICAgICBmaXJzdE5hbWU6IHRoaXMuZmlyc3ROYW1lLFxuICAgICAgbGFzdE5hbWU6IHRoaXMubGFzdE5hbWUsXG4gICAgICB2ZXJpZmllZDogdGhpcy52ZXJpZmllZCxcbiAgICAgIGVtYWlsOiB0aGlzLmVtYWlsLFxuICAgICAgdXNlclR5cGU6IHRoaXMudXNlclR5cGUsXG4gICAgICB1cGRhdGVkT246IHRoaXMudXBkYXRlZE9uLFxuICAgICAgY3JlYXRlZE9uOiB0aGlzLmNyZWF0ZWRPbixcbiAgICB9O1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFVzZXJFbnRpdHk7XG4iXX0=