"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ApartmentLamdaStacks = void 0;
const aws_cdk_lib_1 = require("aws-cdk-lib");
const appsync = require("aws-cdk-lib/aws-appsync");
const helpers_1 = require("./helpers");
const path_1 = require("path");
class ApartmentLamdaStacks extends aws_cdk_lib_1.Stack {
    constructor(scope, id, props) {
        super(scope, id, props);
        const { acmsDatabase, acmsGraphqlApi } = props;
        const apartmentFunction = new appsync.AppsyncFunction(this, "createApartment", {
            name: "createApartment",
            api: acmsGraphqlApi,
            dataSource: acmsGraphqlApi.addDynamoDbDataSource("createApartment", acmsDatabase),
            code: (0, helpers_1.bundleAppSyncResolver)("src/resolvers/apartment/createApartment.ts"),
            runtime: appsync.FunctionRuntime.JS_1_0_0,
        });
        new appsync.Resolver(this, "createApartmentResolver", {
            api: acmsGraphqlApi,
            typeName: "Mutation",
            fieldName: "createApartment",
            code: appsync.Code.fromAsset((0, path_1.join)(__dirname, "./js_resolvers/_before_and_after_mapping_template.js")),
            runtime: appsync.FunctionRuntime.JS_1_0_0,
            pipelineConfig: [apartmentFunction],
        });
    }
}
exports.ApartmentLamdaStacks = ApartmentLamdaStacks;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBhcnRtZW50LWxhbWJkYS1zdGFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImFwYXJ0bWVudC1sYW1iZGEtc3RhY2sudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsNkNBQWdEO0FBR2hELG1EQUFtRDtBQUNuRCx1Q0FBa0Q7QUFDbEQsK0JBQTRCO0FBTzVCLE1BQWEsb0JBQXFCLFNBQVEsbUJBQUs7SUFDN0MsWUFBWSxLQUFnQixFQUFFLEVBQVUsRUFBRSxLQUFnQztRQUN4RSxLQUFLLENBQUMsS0FBSyxFQUFFLEVBQUUsRUFBRSxLQUFLLENBQUMsQ0FBQztRQUV4QixNQUFNLEVBQUUsWUFBWSxFQUFFLGNBQWMsRUFBRSxHQUFHLEtBQUssQ0FBQztRQUUvQyxNQUFNLGlCQUFpQixHQUFHLElBQUksT0FBTyxDQUFDLGVBQWUsQ0FDbkQsSUFBSSxFQUNKLGlCQUFpQixFQUNqQjtZQUNFLElBQUksRUFBRSxpQkFBaUI7WUFDdkIsR0FBRyxFQUFFLGNBQWM7WUFDbkIsVUFBVSxFQUFFLGNBQWMsQ0FBQyxxQkFBcUIsQ0FDOUMsaUJBQWlCLEVBQ2pCLFlBQVksQ0FDYjtZQUNELElBQUksRUFBRSxJQUFBLCtCQUFxQixFQUFDLDRDQUE0QyxDQUFDO1lBQ3pFLE9BQU8sRUFBRSxPQUFPLENBQUMsZUFBZSxDQUFDLFFBQVE7U0FDMUMsQ0FDRixDQUFDO1FBRUYsSUFBSSxPQUFPLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRSx5QkFBeUIsRUFBRTtZQUNwRCxHQUFHLEVBQUUsY0FBYztZQUNuQixRQUFRLEVBQUUsVUFBVTtZQUNwQixTQUFTLEVBQUUsaUJBQWlCO1lBQzVCLElBQUksRUFBRSxPQUFPLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FDMUIsSUFBQSxXQUFJLEVBQUMsU0FBUyxFQUFFLHNEQUFzRCxDQUFDLENBQ3hFO1lBQ0QsT0FBTyxFQUFFLE9BQU8sQ0FBQyxlQUFlLENBQUMsUUFBUTtZQUN6QyxjQUFjLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQztTQUNwQyxDQUFDLENBQUM7SUFDTCxDQUFDO0NBQ0Y7QUFoQ0Qsb0RBZ0NDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU3RhY2ssIFN0YWNrUHJvcHMgfSBmcm9tIFwiYXdzLWNkay1saWJcIjtcbmltcG9ydCB7IFRhYmxlIH0gZnJvbSBcImF3cy1jZGstbGliL2F3cy1keW5hbW9kYlwiO1xuaW1wb3J0IHsgQ29uc3RydWN0IH0gZnJvbSBcImNvbnN0cnVjdHNcIjtcbmltcG9ydCAqIGFzIGFwcHN5bmMgZnJvbSBcImF3cy1jZGstbGliL2F3cy1hcHBzeW5jXCI7XG5pbXBvcnQgeyBidW5kbGVBcHBTeW5jUmVzb2x2ZXIgfSBmcm9tIFwiLi9oZWxwZXJzXCI7XG5pbXBvcnQgeyBqb2luIH0gZnJvbSBcInBhdGhcIjtcblxuaW50ZXJmYWNlIEFwYXJ0bWVudExhbWJkYVN0YWNrUHJvcHMgZXh0ZW5kcyBTdGFja1Byb3BzIHtcbiAgYWNtc0dyYXBocWxBcGk6IGFwcHN5bmMuR3JhcGhxbEFwaTtcbiAgYWNtc0RhdGFiYXNlOiBUYWJsZTtcbn1cblxuZXhwb3J0IGNsYXNzIEFwYXJ0bWVudExhbWRhU3RhY2tzIGV4dGVuZHMgU3RhY2sge1xuICBjb25zdHJ1Y3RvcihzY29wZTogQ29uc3RydWN0LCBpZDogc3RyaW5nLCBwcm9wczogQXBhcnRtZW50TGFtYmRhU3RhY2tQcm9wcykge1xuICAgIHN1cGVyKHNjb3BlLCBpZCwgcHJvcHMpO1xuXG4gICAgY29uc3QgeyBhY21zRGF0YWJhc2UsIGFjbXNHcmFwaHFsQXBpIH0gPSBwcm9wcztcblxuICAgIGNvbnN0IGFwYXJ0bWVudEZ1bmN0aW9uID0gbmV3IGFwcHN5bmMuQXBwc3luY0Z1bmN0aW9uKFxuICAgICAgdGhpcyxcbiAgICAgIFwiY3JlYXRlQXBhcnRtZW50XCIsXG4gICAgICB7XG4gICAgICAgIG5hbWU6IFwiY3JlYXRlQXBhcnRtZW50XCIsXG4gICAgICAgIGFwaTogYWNtc0dyYXBocWxBcGksXG4gICAgICAgIGRhdGFTb3VyY2U6IGFjbXNHcmFwaHFsQXBpLmFkZER5bmFtb0RiRGF0YVNvdXJjZShcbiAgICAgICAgICBcImNyZWF0ZUFwYXJ0bWVudFwiLFxuICAgICAgICAgIGFjbXNEYXRhYmFzZVxuICAgICAgICApLFxuICAgICAgICBjb2RlOiBidW5kbGVBcHBTeW5jUmVzb2x2ZXIoXCJzcmMvcmVzb2x2ZXJzL2FwYXJ0bWVudC9jcmVhdGVBcGFydG1lbnQudHNcIiksXG4gICAgICAgIHJ1bnRpbWU6IGFwcHN5bmMuRnVuY3Rpb25SdW50aW1lLkpTXzFfMF8wLFxuICAgICAgfVxuICAgICk7XG5cbiAgICBuZXcgYXBwc3luYy5SZXNvbHZlcih0aGlzLCBcImNyZWF0ZUFwYXJ0bWVudFJlc29sdmVyXCIsIHtcbiAgICAgIGFwaTogYWNtc0dyYXBocWxBcGksXG4gICAgICB0eXBlTmFtZTogXCJNdXRhdGlvblwiLFxuICAgICAgZmllbGROYW1lOiBcImNyZWF0ZUFwYXJ0bWVudFwiLFxuICAgICAgY29kZTogYXBwc3luYy5Db2RlLmZyb21Bc3NldChcbiAgICAgICAgam9pbihfX2Rpcm5hbWUsIFwiLi9qc19yZXNvbHZlcnMvX2JlZm9yZV9hbmRfYWZ0ZXJfbWFwcGluZ190ZW1wbGF0ZS5qc1wiKVxuICAgICAgKSxcbiAgICAgIHJ1bnRpbWU6IGFwcHN5bmMuRnVuY3Rpb25SdW50aW1lLkpTXzFfMF8wLFxuICAgICAgcGlwZWxpbmVDb25maWc6IFthcGFydG1lbnRGdW5jdGlvbl0sXG4gICAgfSk7XG4gIH1cbn1cbiJdfQ==