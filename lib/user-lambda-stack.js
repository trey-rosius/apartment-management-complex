"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UserLamdaStacks = void 0;
const aws_cdk_lib_1 = require("aws-cdk-lib");
const path_1 = require("path");
const appsync = require("aws-cdk-lib/aws-appsync");
const helpers_1 = require("./helpers");
class UserLamdaStacks extends aws_cdk_lib_1.Stack {
    constructor(scope, id, props) {
        super(scope, id, props);
        const { acmsDatabase, acmsGraphqlApi } = props;
        const acmsUserFunction = new appsync.AppsyncFunction(this, "createUserAccount", {
            name: "createUserAccount",
            api: acmsGraphqlApi,
            dataSource: acmsGraphqlApi.addDynamoDbDataSource("createUserAccount", acmsDatabase),
            code: (0, helpers_1.bundleAppSyncResolver)("src/resolvers/user/createUserAccount.ts"),
            runtime: appsync.FunctionRuntime.JS_1_0_0,
        });
        new appsync.Resolver(this, "createUserResolver", {
            api: acmsGraphqlApi,
            typeName: "Mutation",
            fieldName: "createUserAccount",
            code: appsync.Code.fromAsset((0, path_1.join)(__dirname, "./js_resolvers/_before_and_after_mapping_template.js")),
            runtime: appsync.FunctionRuntime.JS_1_0_0,
            pipelineConfig: [acmsUserFunction],
        });
    }
}
exports.UserLamdaStacks = UserLamdaStacks;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlci1sYW1iZGEtc3RhY2suanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJ1c2VyLWxhbWJkYS1zdGFjay50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSw2Q0FBZ0Q7QUFHaEQsK0JBQTRCO0FBQzVCLG1EQUFtRDtBQUNuRCx1Q0FBa0Q7QUFNbEQsTUFBYSxlQUFnQixTQUFRLG1CQUFLO0lBQ3hDLFlBQVksS0FBZ0IsRUFBRSxFQUFVLEVBQUUsS0FBMkI7UUFDbkUsS0FBSyxDQUFDLEtBQUssRUFBRSxFQUFFLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFFeEIsTUFBTSxFQUFFLFlBQVksRUFBRSxjQUFjLEVBQUUsR0FBRyxLQUFLLENBQUM7UUFFL0MsTUFBTSxnQkFBZ0IsR0FBRyxJQUFJLE9BQU8sQ0FBQyxlQUFlLENBQUMsSUFBSSxFQUFFLG1CQUFtQixFQUFFO1lBQzlFLElBQUksRUFBRSxtQkFBbUI7WUFDekIsR0FBRyxFQUFFLGNBQWM7WUFDbkIsVUFBVSxFQUFFLGNBQWMsQ0FBQyxxQkFBcUIsQ0FDOUMsbUJBQW1CLEVBQ25CLFlBQVksQ0FDYjtZQUNELElBQUksRUFBRSxJQUFBLCtCQUFxQixFQUFDLHlDQUF5QyxDQUFDO1lBQ3RFLE9BQU8sRUFBRSxPQUFPLENBQUMsZUFBZSxDQUFDLFFBQVE7U0FDMUMsQ0FBQyxDQUFDO1FBRUgsSUFBSSxPQUFPLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRSxvQkFBb0IsRUFBRTtZQUMvQyxHQUFHLEVBQUUsY0FBYztZQUNuQixRQUFRLEVBQUUsVUFBVTtZQUNwQixTQUFTLEVBQUUsbUJBQW1CO1lBQzlCLElBQUksRUFBRSxPQUFPLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FDMUIsSUFBQSxXQUFJLEVBQUMsU0FBUyxFQUFFLHNEQUFzRCxDQUFDLENBQ3hFO1lBQ0QsT0FBTyxFQUFFLE9BQU8sQ0FBQyxlQUFlLENBQUMsUUFBUTtZQUN6QyxjQUFjLEVBQUUsQ0FBQyxnQkFBZ0IsQ0FBQztTQUNuQyxDQUFDLENBQUM7SUFDTCxDQUFDO0NBQ0Y7QUE1QkQsMENBNEJDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU3RhY2ssIFN0YWNrUHJvcHMgfSBmcm9tIFwiYXdzLWNkay1saWJcIjtcbmltcG9ydCB7IFRhYmxlIH0gZnJvbSBcImF3cy1jZGstbGliL2F3cy1keW5hbW9kYlwiO1xuaW1wb3J0IHsgQ29uc3RydWN0IH0gZnJvbSBcImNvbnN0cnVjdHNcIjtcbmltcG9ydCB7IGpvaW4gfSBmcm9tIFwicGF0aFwiO1xuaW1wb3J0ICogYXMgYXBwc3luYyBmcm9tIFwiYXdzLWNkay1saWIvYXdzLWFwcHN5bmNcIjtcbmltcG9ydCB7IGJ1bmRsZUFwcFN5bmNSZXNvbHZlciB9IGZyb20gXCIuL2hlbHBlcnNcIjtcblxuaW50ZXJmYWNlIFVzZXJMYW1iZGFTdGFja1Byb3BzIGV4dGVuZHMgU3RhY2tQcm9wcyB7XG4gIGFjbXNHcmFwaHFsQXBpOiBhcHBzeW5jLkdyYXBocWxBcGk7XG4gIGFjbXNEYXRhYmFzZTogVGFibGU7XG59XG5leHBvcnQgY2xhc3MgVXNlckxhbWRhU3RhY2tzIGV4dGVuZHMgU3RhY2sge1xuICBjb25zdHJ1Y3RvcihzY29wZTogQ29uc3RydWN0LCBpZDogc3RyaW5nLCBwcm9wczogVXNlckxhbWJkYVN0YWNrUHJvcHMpIHtcbiAgICBzdXBlcihzY29wZSwgaWQsIHByb3BzKTtcblxuICAgIGNvbnN0IHsgYWNtc0RhdGFiYXNlLCBhY21zR3JhcGhxbEFwaSB9ID0gcHJvcHM7XG5cbiAgICBjb25zdCBhY21zVXNlckZ1bmN0aW9uID0gbmV3IGFwcHN5bmMuQXBwc3luY0Z1bmN0aW9uKHRoaXMsIFwiY3JlYXRlVXNlckFjY291bnRcIiwge1xuICAgICAgbmFtZTogXCJjcmVhdGVVc2VyQWNjb3VudFwiLFxuICAgICAgYXBpOiBhY21zR3JhcGhxbEFwaSxcbiAgICAgIGRhdGFTb3VyY2U6IGFjbXNHcmFwaHFsQXBpLmFkZER5bmFtb0RiRGF0YVNvdXJjZShcbiAgICAgICAgXCJjcmVhdGVVc2VyQWNjb3VudFwiLFxuICAgICAgICBhY21zRGF0YWJhc2VcbiAgICAgICksXG4gICAgICBjb2RlOiBidW5kbGVBcHBTeW5jUmVzb2x2ZXIoXCJzcmMvcmVzb2x2ZXJzL3VzZXIvY3JlYXRlVXNlckFjY291bnQudHNcIiksXG4gICAgICBydW50aW1lOiBhcHBzeW5jLkZ1bmN0aW9uUnVudGltZS5KU18xXzBfMCxcbiAgICB9KTtcblxuICAgIG5ldyBhcHBzeW5jLlJlc29sdmVyKHRoaXMsIFwiY3JlYXRlVXNlclJlc29sdmVyXCIsIHtcbiAgICAgIGFwaTogYWNtc0dyYXBocWxBcGksXG4gICAgICB0eXBlTmFtZTogXCJNdXRhdGlvblwiLFxuICAgICAgZmllbGROYW1lOiBcImNyZWF0ZVVzZXJBY2NvdW50XCIsXG4gICAgICBjb2RlOiBhcHBzeW5jLkNvZGUuZnJvbUFzc2V0KFxuICAgICAgICBqb2luKF9fZGlybmFtZSwgXCIuL2pzX3Jlc29sdmVycy9fYmVmb3JlX2FuZF9hZnRlcl9tYXBwaW5nX3RlbXBsYXRlLmpzXCIpXG4gICAgICApLFxuICAgICAgcnVudGltZTogYXBwc3luYy5GdW5jdGlvblJ1bnRpbWUuSlNfMV8wXzAsXG4gICAgICBwaXBlbGluZUNvbmZpZzogW2FjbXNVc2VyRnVuY3Rpb25dLFxuICAgIH0pO1xuICB9XG59XG4iXX0=